{"version":3,"sources":["assets/LogoIcons.svg","assets/MenueButton.svg","assets/img1.png","assets/img2.png","assets/img3.png","assets/img4.png","assets/img5.png","components/header/Header.js","components/body/Content.js","data/bodyData.js","components/body/Contents.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","tab","Header","header","initial","opacity","y","rotateX","animate","transition","type","duration","delay","ease","className","src","require","alt","map","el","key","Content","backgroundImage","title","text","darkTheme","img","div","damping","button","whileTap","borderRadius","whileHover","scale","body","data","heading","contentText","Contents","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0518e9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoIcons.70c91c20.svg\";","module.exports = __webpack_public_path__ + \"static/media/MenueButton.6eca8208.svg\";","module.exports = __webpack_public_path__ + \"static/media/img1.0738243c.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.8252f295.png\";","module.exports = __webpack_public_path__ + \"static/media/img3.c10b5663.png\";","module.exports = __webpack_public_path__ + \"static/media/img4.baa74977.png\";","module.exports = __webpack_public_path__ + \"static/media/img5.7c73de33.png\";","import React from \"react\";\r\n\r\nimport \"./header.css\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst tab = [\"HOME\", \"GALLERY\", \"BLOG\", \"PAGE\", \"SHOP\", \"ELEMENTS\"];\r\n\r\nconst Header = () => {\r\n    return (\r\n        <motion.header\r\n            initial={{ opacity: 0, y: -90, rotateX: 180 }}\r\n            animate={{ opacity: 1, y: 0, rotateX: 0 }}\r\n            transition={{\r\n                type: \"spring\",\r\n                duration: 0.8,\r\n                delay: 0.4,\r\n                ease: \"easeOut\",\r\n            }}\r\n            className='appBar'>\r\n            <div className='logo-conatiner'>\r\n                <img src={require(\"../../assets/LogoIcons.svg\")} alt='logo' />\r\n            </div>\r\n            <ul className='appBar-tabs'>\r\n                {tab.map((el, key) => (\r\n                    <li className='link-tabs' key={key}>\r\n                        <button>{el}</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div className='menu-icon'>\r\n                <img src={require(\"../../assets/MenueButton.svg\")} alt='' />\r\n            </div>\r\n        </motion.header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"./content.css\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Content = ({ backgroundImage, title, text, darkTheme }) => {\r\n    return (\r\n        <div className={darkTheme ? \"content-box-black\" : \"content-box-white\"}>\r\n            <div className='background'>\r\n                <motion.img\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ duration: 0.6, delay: 1 }}\r\n                    src={backgroundImage}\r\n                    alt=''\r\n                />\r\n            </div>\r\n            <div className='content-box-text'>\r\n                <motion.div\r\n                    initial={{ y: -190, opacity: 0 }}\r\n                    animate={{ y: 0, opacity: 1 }}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        delay: 1.2,\r\n                        ease: \"easeOut\",\r\n                        duration: 0.7,\r\n                        damping: 20,\r\n                    }}\r\n                    className='heading'>\r\n                    {title}\r\n                </motion.div>\r\n                <motion.div\r\n                    initial={{ y: -190, opacity: 0, rotateX: 180 }}\r\n                    animate={{ y: 0, opacity: 1, rotateX: 0 }}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        delay: 1.2,\r\n                        ease: \"easeOut\",\r\n                        duration: 0.7,\r\n                    }}\r\n                    className='body-text'>\r\n                    {text}\r\n                </motion.div>\r\n                <motion.button\r\n                    whileTap={{ borderRadius: 50 }}\r\n                    whileHover={{ scale: 1.8 }}>\r\n                    PURCHASE\r\n                </motion.button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","const body =\r\n    \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Illum at sit inventore iure necessitatibus, quibusdam nobis ad excepturi vero temporibus earum porro facere fuga ab similique. Sequi ab id voluptas.\";\r\n\r\nconst data = [\r\n    {\r\n        heading: \"OUT THERE\",\r\n        contentText: body,\r\n        img: require(\"../assets/img1.png\"),\r\n        darkTheme: false,\r\n    },\r\n    {\r\n        heading: \"IMMERSION\",\r\n        contentText: body,\r\n        img: require(\"../assets/img2.png\"),\r\n        darkTheme: true,\r\n    },\r\n    {\r\n        heading: \"TO INFINITY\",\r\n        contentText: body,\r\n        img: require(\"../assets/img3.png\"),\r\n        darkTheme: false,\r\n    },\r\n    {\r\n        heading: \"STREAMLINE\",\r\n        contentText: body,\r\n        img: require(\"../assets/img4.png\"),\r\n        darkTheme: true,\r\n    },\r\n    {\r\n        heading: \"UNLEASH\",\r\n        contentText: body,\r\n        img: require(\"../assets/img5.png\"),\r\n        darkTheme: false,\r\n    },\r\n];\r\n\r\nexport default data;\r\n","import React from \"react\";\r\n\r\nimport Content from \"./Content\";\r\n\r\nimport data from \"./../../data/bodyData\";\r\n\r\nconst Contents = () => {\r\n    return (\r\n        <>\r\n            {data.map((el, key) => (\r\n                <Content\r\n                    key={key}\r\n                    title={el.heading}\r\n                    backgroundImage={el.img}\r\n                    text={el.contentText}\r\n                    darkTheme={el.darkTheme}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Contents;\r\n","import React from \"react\";\n\nimport Header from \"./components/header/Header\";\nimport Contents from \"./components/body/Contents\";\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <Contents />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}